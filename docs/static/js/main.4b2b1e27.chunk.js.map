{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GridGifItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GridGifItem","className","src","alt","GifGrid","loading","estado","setEstado","useEffect","then","imgs","setTimeout","useFetchGifs","gif","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OAEvCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SApBe,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCNjBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,8DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAabM,GAba,4CAAH,sDCCRO,EAAc,SAAC,GAAoB,IAAlBb,EAAiB,EAAjBA,IAAKU,EAAY,EAAZA,MAG/B,OACI,sBAAKI,UAAU,wCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCHJO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECHb,SAACA,GAAc,IAAD,EAEVd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAEvBC,EAFuB,KAqBtC,OAdAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAC,GACFC,YAAW,WACXJ,EAAU,CACNf,KAAMkB,EACNL,SAAS,MAGV,UAEZ,CAACpB,IAEGqB,EDf0BM,CAAa3B,GAAjCa,EAHwB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAIrB,OACI,gCACI,6BAAMpB,IACJoB,GAAW,mBAAGJ,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,6CAAf,SAEOH,EAAOJ,KAAI,SAAAmB,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIjB,aEhBxBkB,EAAe,WAAO,IAAD,EAEM3C,mBAAS,CAAC,cAFhB,mBAEvB4C,EAFuB,KAEX7C,EAFW,KAI9B,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ6C,EAAWrB,KAAI,SAACT,GAAD,OACX,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCbjC+B,IAASC,OAEL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4b2b1e27.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handledInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [ inputValue, ...cats,]);\r\n           // console.log('submit');\r\n            setInputValue('');\r\n        }\r\n       \r\n    }\r\n    //console.log(\"inputValue: \"+inputValue);\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handledInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","\r\n export const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=5&api_key=P4IRcExpicUDZSeqRZIOLhRtf0JzqNov`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n    \r\n};","import React from 'react'\r\n\r\nexport const GridGifItem = ( {url, title} ) => {\r\n\r\n    //console.log(url)\r\n    return (\r\n        <div className=\"card animate_animated animate__bounce\" >\r\n            <img src={url} alt={title}></img>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","//rafc\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n import { GridGifItem } from './GridGifItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    \r\n    \r\n    const { data:images, loading } = useFetchGifs(category);\r\n     \r\n    \r\n   \r\n    return (\r\n        <div>\r\n            <h3>{ category }</h3>\r\n            { loading && <p className=\" animate_animated animate__flash\">Cargando...</p> }\r\n             <div className=\"card-grid animate_animated animate__bounce\">\r\n                {\r\n                    images.map(gif => (\r\n                        <GridGifItem\r\n                            key={gif.id}\r\n                            {...gif}\r\n                        />\r\n                    ))\r\n                }\r\n            </div> \r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [estado, setEstado] = useState({\r\n        data: [],\r\n        loading: true //estado\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                setEstado({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n                    \r\n                }, 2000);\r\n            });\r\n    }, [category]);\r\n\r\n    return estado;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <>\r\n            <h2> GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map((category) =>\r\n                        <GifGrid\r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  \n    <GifExpertApp />,  \n    document.getElementById('root')\n  \n);\n\n"],"sourceRoot":""}